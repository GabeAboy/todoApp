git is a 'DISTRIBUTED VERSION CONTROL'.
allows us to save out work and does not overwrite our older version of software.
We can take a snapshot of our project from day one and go back after day 6 to see what we've done.
how do we go back and review in between those days?


distributed : i have a version on my computer you have a different version on your computer. We have two different type of code that we can later merge.

GIT vs GITHUB
git is the software that we use to control version control. where we save and control our code.
github is where we can store our repos(versions of our code).
github host our software on cloud.

REPOS
cat <=== will show what text is inside of the file.
ex. ====> cat README.txt

git add . ====> add all files in directory

unstage files ====> git reset (file.name)

to delete files/repos =========> rm -rf .git

vim  <======escape< ======== :q! <====exit without saving anything

git log ===> what are all the changes that i made inside my commit
command+ q to exit.

git clone is the command to get the code onto my computer.

MAKING REPO on github(empty)
start version controlling directory ====> git init

vim README.md <======? make readme? how do you make the readme in the commandline

origin master <======= remote that we added earlier. It is the master branch that we added.

Set upstream < ======== sets up master so can track origin branch

fork <==== cloning from one github account to another.
